apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-google-dns
  namespace: nbiot-detector
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - app.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-app 
  rules:
    - host: app.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: nbiot-detector-app-nbiot-detector
                port:
                  number: 8000
            path: /
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-google-dns
  namespace: jenkins
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jenkins.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-jenkins 
  rules:
    - host: jenkins.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: jenkins
                port:
                  number: 8080
            path: /
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-google-dns
  namespace: monitoring
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - grafana.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-grafana 
  rules:
    - host: grafana.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: kube-prometheus-stack-grafana
                port:
                  number: 80
            path: /
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-google-dns
  namespace: tracing
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - jaeger.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-jaeger 
  rules:
    - host: jaeger.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: jaeger-jaeger-all-in-one
                port:
                  number: 16686
            path: /
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-google-dns
  namespace: logging
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - kibana.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-jaeger 
  rules:
    - host: kibana.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: kibana-kibana
                port:
                  number: 5601
            path: /
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-google-dns
  namespace: argocd
  annotations:
    # Use cert-manager to issue the certificate for this Ingress
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - argocd.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
    # cert-manager will store the certificate in this secret
    secretName: tls-secret-for-argocd 
  rules:
    - host: argocd.tuan-lnm.cloud # ðŸ‘ˆ Replace with your domain
      http:
        paths:
          - pathType: Prefix
            backend:
              service:
                name: argo-cd-server
                port:
                  number: 443
            path: /